#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace atmsystem
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ATM")]
	public partial class ATMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCheck1(Check1 instance);
    partial void UpdateCheck1(Check1 instance);
    partial void DeleteCheck1(Check1 instance);
    #endregion
		
		public ATMDataContext() : 
				base(global::My.Settings.Default.ATMConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ATMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ATMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ATMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ATMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Check1> Check1s
		{
			get
			{
				return this.GetTable<Check1>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check1")]
	public partial class Check1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _AN;
		
		private int _PinCode;
		
		private string _Fname;
		
		private string _Lname;
		
		private string _Adr;
		
		private System.Nullable<long> _Phone;
		
		private string _Gender;
		
		private string _DBO;
		
		private System.Nullable<long> _Balance;
		
		private System.Nullable<long> _out_Bl;
		
		private System.Nullable<int> _Blocked;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnANChanging(long value);
    partial void OnANChanged();
    partial void OnPinCodeChanging(int value);
    partial void OnPinCodeChanged();
    partial void OnFnameChanging(string value);
    partial void OnFnameChanged();
    partial void OnLnameChanging(string value);
    partial void OnLnameChanged();
    partial void OnAdrChanging(string value);
    partial void OnAdrChanged();
    partial void OnPhoneChanging(System.Nullable<long> value);
    partial void OnPhoneChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnDBOChanging(string value);
    partial void OnDBOChanged();
    partial void OnBalanceChanging(System.Nullable<long> value);
    partial void OnBalanceChanged();
    partial void Onout_BlChanging(System.Nullable<long> value);
    partial void Onout_BlChanged();
    partial void OnBlockedChanging(System.Nullable<int> value);
    partial void OnBlockedChanged();
    #endregion
		
		public Check1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AN", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long AN
		{
			get
			{
				return this._AN;
			}
			set
			{
				if ((this._AN != value))
				{
					this.OnANChanging(value);
					this.SendPropertyChanging();
					this._AN = value;
					this.SendPropertyChanged("AN");
					this.OnANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PinCode", DbType="Int NOT NULL")]
		public int PinCode
		{
			get
			{
				return this._PinCode;
			}
			set
			{
				if ((this._PinCode != value))
				{
					this.OnPinCodeChanging(value);
					this.SendPropertyChanging();
					this._PinCode = value;
					this.SendPropertyChanged("PinCode");
					this.OnPinCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fname", DbType="VarChar(50)")]
		public string Fname
		{
			get
			{
				return this._Fname;
			}
			set
			{
				if ((this._Fname != value))
				{
					this.OnFnameChanging(value);
					this.SendPropertyChanging();
					this._Fname = value;
					this.SendPropertyChanged("Fname");
					this.OnFnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lname", DbType="VarChar(50)")]
		public string Lname
		{
			get
			{
				return this._Lname;
			}
			set
			{
				if ((this._Lname != value))
				{
					this.OnLnameChanging(value);
					this.SendPropertyChanging();
					this._Lname = value;
					this.SendPropertyChanged("Lname");
					this.OnLnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adr", DbType="VarChar(50)")]
		public string Adr
		{
			get
			{
				return this._Adr;
			}
			set
			{
				if ((this._Adr != value))
				{
					this.OnAdrChanging(value);
					this.SendPropertyChanging();
					this._Adr = value;
					this.SendPropertyChanged("Adr");
					this.OnAdrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="BigInt")]
		public System.Nullable<long> Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(50)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBO", DbType="VarChar(50)")]
		public string DBO
		{
			get
			{
				return this._DBO;
			}
			set
			{
				if ((this._DBO != value))
				{
					this.OnDBOChanging(value);
					this.SendPropertyChanging();
					this._DBO = value;
					this.SendPropertyChanged("DBO");
					this.OnDBOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="BigInt")]
		public System.Nullable<long> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_out_Bl", DbType="BigInt")]
		public System.Nullable<long> out_Bl
		{
			get
			{
				return this._out_Bl;
			}
			set
			{
				if ((this._out_Bl != value))
				{
					this.Onout_BlChanging(value);
					this.SendPropertyChanging();
					this._out_Bl = value;
					this.SendPropertyChanged("out_Bl");
					this.Onout_BlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blocked", DbType="Int")]
		public System.Nullable<int> Blocked
		{
			get
			{
				return this._Blocked;
			}
			set
			{
				if ((this._Blocked != value))
				{
					this.OnBlockedChanging(value);
					this.SendPropertyChanging();
					this._Blocked = value;
					this.SendPropertyChanged("Blocked");
					this.OnBlockedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
